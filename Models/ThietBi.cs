using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace phonev2.Models
{
    [Table("ThietBi")]
    public class ThietBi
    {
        [Key]
        [Column("mathietbi")]
        [Display(Name = "M√£ Thi·∫øt B·ªã")]
        public int MaThietBi { get; set; }

        [Column("makhachhang")]
        [Display(Name = "Kh√°ch H√†ng")]
        [Required(ErrorMessage = "Kh√°ch h√†ng l√† b·∫Øt bu·ªôc")]
        public int MaKhachHang { get; set; }

        [Column("tenthietbi")]
        [Display(Name = "T√™n Thi·∫øt B·ªã")]
        [Required(ErrorMessage = "T√™n thi·∫øt b·ªã l√† b·∫Øt bu·ªôc")]
        [StringLength(200, ErrorMessage = "T√™n thi·∫øt b·ªã kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 200 k√Ω t·ª±")]
        public string TenThietBi { get; set; } = string.Empty;

        [Column("loaithietbi")]
        [Display(Name = "Lo·∫°i Thi·∫øt B·ªã")]
        [Required(ErrorMessage = "Lo·∫°i thi·∫øt b·ªã l√† b·∫Øt bu·ªôc")]
        [StringLength(50, ErrorMessage = "Lo·∫°i thi·∫øt b·ªã kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 50 k√Ω t·ª±")]
        public string LoaiThietBi { get; set; } = string.Empty;

        [Column("hangsanxuat")]
        [Display(Name = "H√£ng S·∫£n Xu·∫•t")]
        [StringLength(100, ErrorMessage = "H√£ng s·∫£n xu·∫•t kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 100 k√Ω t·ª±")]
        public string? HangSanXuat { get; set; }

        [Column("model")]
        [Display(Name = "Model")]
        [StringLength(100, ErrorMessage = "Model kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 100 k√Ω t·ª±")]
        public string? Model { get; set; }

        // Thu·ªôc t√≠nh ƒëi·ªÅu h∆∞·ªõng
        [ForeignKey("MaKhachHang")]
        public virtual KhachHang? KhachHang { get; set; }

        // Thu·ªôc t√≠nh ƒëi·ªÅu h∆∞·ªõng cho c√°c b·∫£ng s·∫Ω c√≥ sau
        // public virtual ICollection<PhieuSua>? PhieuSuas { get; set; }

        // Thu·ªôc t√≠nh hi·ªÉn th·ªã
        [Display(Name = "Th√¥ng Tin Thi·∫øt B·ªã")]
        public string ThongTinThietBi
        {
            get
            {
                var parts = new List<string> { TenThietBi };
                if (!string.IsNullOrEmpty(HangSanXuat)) parts.Add(HangSanXuat);
                if (!string.IsNullOrEmpty(Model)) parts.Add(Model);
                return string.Join(" - ", parts);
            }
        }

        [Display(Name = "M√¥ T·∫£ Ng·∫Øn")]
        public string MoTaNgan
        {
            get
            {
                var description = TenThietBi;
                if (!string.IsNullOrEmpty(HangSanXuat))
                {
                    description += $" ({HangSanXuat}";
                    if (!string.IsNullOrEmpty(Model))
                        description += $" {Model}";
                    description += ")";
                }
                return description.Length > 50 ? description.Substring(0, 47) + "..." : description;
            }
        }

        [Display(Name = "Lo·∫°i Thi·∫øt B·ªã Badge")]
        public string LoaiThietBiBadge
        {
            get
            {
                return LoaiThietBi.ToLower() switch
                {
                    var x when x.Contains("ƒëi·ªán tho·∫°i") || x.Contains("phone") => "badge bg-primary",
                    var x when x.Contains("laptop") || x.Contains("m√°y t√≠nh") => "badge bg-success",
                    var x when x.Contains("tablet") || x.Contains("m√°y t√≠nh b·∫£ng") => "badge bg-info",
                    var x when x.Contains("ƒë·ªìng h·ªì") || x.Contains("watch") => "badge bg-warning",
                    _ => "badge bg-secondary"
                };
            }
        }

        // C√°c ph∆∞∆°ng th·ª©c logic nghi·ªáp v·ª•
        public bool KiemTraThietBiHopLe()
        {
            return !string.IsNullOrEmpty(TenThietBi) && 
                   !string.IsNullOrEmpty(LoaiThietBi) && 
                   MaKhachHang > 0;
        }

        public string LayMaNhanDienThietBi()
        {
            return $"TB{MaThietBi:D6}"; // ƒê·ªãnh d·∫°ng: TB000001
        }

        public string LayMoTaDay()
        {
            var parts = new List<string> { TenThietBi };
            
            if (!string.IsNullOrEmpty(HangSanXuat)) parts.Add(HangSanXuat);
            if (!string.IsNullOrEmpty(Model)) parts.Add(Model);
            parts.Add($"(Lo·∫°i: {LoaiThietBi})");
            
            return string.Join(" - ", parts);
        }

        public bool LaThietBiDienThoai()
        {
            return LoaiThietBi.ToLower().Contains("ƒëi·ªán tho·∫°i") || 
                   LoaiThietBi.ToLower().Contains("phone") ||
                   LoaiThietBi.ToLower().Contains("smartphone");
        }

        public bool LaThietBiLaptop()
        {
            return LoaiThietBi.ToLower().Contains("laptop") || 
                   LoaiThietBi.ToLower().Contains("m√°y t√≠nh") ||
                   LoaiThietBi.ToLower().Contains("computer");
        }

        public bool LaThietBiTablet()
        {
            return LoaiThietBi.ToLower().Contains("tablet") || 
                   LoaiThietBi.ToLower().Contains("m√°y t√≠nh b·∫£ng") ||
                   LoaiThietBi.ToLower().Contains("ipad");
        }

        public string LayIconThietBi()
        {
            if (LaThietBiDienThoai()) return "üì±";
            if (LaThietBiLaptop()) return "üíª";
            if (LaThietBiTablet()) return "üìä";
            return "üîß";
        }
    }
}