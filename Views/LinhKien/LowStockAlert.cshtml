@model IEnumerable<phonev2.Models.LinhKien>
@{
    Layout = "_AdminLayout";
}


@section PageActions {
    <div class="btn-group">
        <a asp-action="Index" class="btn btn-secondary">
            <i class="fas fa-arrow-left me-1"></i> Quay Lại Danh Sách
        </a>
        <a asp-action="StockReport" class="btn btn-info">
            <i class="fas fa-chart-bar me-1"></i> Báo Cáo Tồn Kho
        </a>
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus me-1"></i> Thêm Linh Kiện
        </a>
    </div>
}


<div class="alert alert-warning border-warning shadow-sm mb-4" role="alert">
    <div class="d-flex align-items-center">
        <i class="fas fa-exclamation-triangle fa-2x me-3"></i>
        <div>
            <h5 class="alert-heading mb-1">Cảnh Báo Tồn Kho Thấp</h5>
            <p class="mb-0">
                Danh sách các linh kiện có tồn kho ≤ @ViewData["Threshold"] cái. 
                Cần nhập thêm hàng để tránh gián đoạn kinh doanh.
            </p>
        </div>
    </div>
</div>


<div class="card mb-4">
    <div class="card-body">
        <form asp-action="LowStockAlert" method="get" class="row g-3 align-items-end">
            <div class="col-md-3">
                <label class="form-label">Ngưỡng cảnh báo</label>
                <div class="input-group">
                    <input type="number" name="threshold" value="@ViewData["Threshold"]" 
                           class="form-control" min="1" max="100" />
                    <span class="input-group-text">cái</span>
                </div>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-warning w-100">
                    <i class="fas fa-search me-1"></i> Lọc
                </button>
            </div>
            <div class="col-md-7">
                <div class="d-flex gap-2 justify-content-end">
                    <a href="?threshold=5" class="btn btn-outline-danger btn-sm">≤ 5</a>
                    <a href="?threshold=10" class="btn btn-outline-warning btn-sm">≤ 10</a>
                    <a href="?threshold=20" class="btn btn-outline-info btn-sm">≤ 20</a>
                    <a href="?threshold=50" class="btn btn-outline-secondary btn-sm">≤ 50</a>
                </div>
            </div>
        </form>
    </div>
</div>


<div class="row mb-4">
    <div class="col-md-3">
        <div class="card bg-danger text-white">
            <div class="card-body text-center">
                <h3 class="mb-1">@Model.Count(l => l.SoLuongTon == 0)</h3>
                <p class="mb-0">Hết Hàng</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-warning text-white">
            <div class="card-body text-center">
                <h3 class="mb-1">@Model.Count(l => l.SoLuongTon > 0 && l.SoLuongTon <= 5)</h3>
                <p class="mb-0">Sắp Hết (≤5)</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-info text-white">
            <div class="card-body text-center">
                <h3 class="mb-1">@Model.Count(l => l.SoLuongTon > 5 && l.SoLuongTon <= (int)ViewData["Threshold"])</h3>
                <p class="mb-0">Ít Hàng</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-secondary text-white">
            <div class="card-body text-center">
                <h3 class="mb-1">@((Model.Where(l => l.SoLuongTon > 0).Sum(l => l.GiaNhap * l.SoLuongTon)).ToString("N0"))</h3>
                <p class="mb-0">Giá Trị Tồn (VNĐ)</p>
            </div>
        </div>
    </div>
</div>


<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">
            <i class="fas fa-list me-2"></i>
            Linh Kiện Cần Nhập Thêm (@Model.Count() mặt hàng)
        </h5>
        <div class="btn-group btn-group-sm">
            <button type="button" class="btn btn-outline-success" onclick="bulkUpdateStock()">
                <i class="fas fa-plus me-1"></i> Nhập Hàng Loạt
            </button>
            <button type="button" class="btn btn-outline-info" onclick="exportList()">
                <i class="fas fa-download me-1"></i> Xuất Danh Sách
            </button>
        </div>
    </div>
    <div class="card-body p-0">
        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th width="30">
                                <input type="checkbox" id="selectAll" class="form-check-input">
                            </th>
                            <th>Linh Kiện</th>
                            <th>Loại</th>
                            <th>Hãng</th>
                            <th>Tồn Kho</th>
                            <th>Giá Nhập</th>
                            <th>Đề Xuất Nhập</th>
                            <th>Thao Tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.OrderBy(l => l.SoLuongTon))
                        {
                            <tr class="@(item.SoLuongTon == 0 ? "table-danger" : item.SoLuongTon <= 5 ? "table-warning" : "table-info")">
                                <td>
                                    <input type="checkbox" class="form-check-input item-checkbox" 
                                           data-id="@item.MaLinhKien" data-name="@item.TenLinhKien">
                                </td>
                                <td>
                                    <div>
                                        <strong>@item.TenLinhKien</strong>
                                        <br><small class="text-muted">#@item.MaLinhKien</small>
                                    </div>
                                </td>
                                <td>
                                    <span class="badge bg-info">@item.LoaiLinhKien?.TenLoaiLinhKien</span>
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.HangSanXuat))
                                    {
                                        <span class="badge bg-secondary">@item.HangSanXuat</span>
                                    }
                                    else
                                    {
                                        <em class="text-muted">Chưa có</em>
                                    }
                                </td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <span class="@item.TonKhoCssClass me-2">@item.SoLuongTon</span>
                                        @if (item.SoLuongTon == 0)
                                        {
                                            <i class="fas fa-times-circle text-danger" title="Hết hàng"></i>
                                        }
                                        else if (item.SoLuongTon <= 5)
                                        {
                                            <i class="fas fa-exclamation-triangle text-warning" title="Sắp hết"></i>
                                        }
                                        else
                                        {
                                            <i class="fas fa-info-circle text-info" title="Ít hàng"></i>
                                        }
                                    </div>
                                </td>
                                <td>
                                    <strong>@item.GiaNhapText</strong>
                                </td>
                                <td>
                                    @{
                                        var suggestedQuantity = item.SoLuongTon == 0 ? 20 : (20 - item.SoLuongTon);
                                        var suggestedCost = suggestedQuantity * item.GiaNhap;
                                    }
                                    <div class="text-center">
                                        <strong class="text-primary">+@suggestedQuantity cái</strong>
                                        <br><small class="text-muted">@suggestedCost.ToString("N0") VNĐ</small>
                                    </div>
                                </td>
                                <td>
                                    <div class="btn-group btn-group-sm">
                                        <button type="button" class="btn btn-outline-success quick-restock" 
                                                data-id="@item.MaLinhKien" 
                                                data-suggested="@suggestedQuantity"
                                                title="Nhập nhanh @suggestedQuantity cái">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                        <button type="button" class="btn btn-outline-primary custom-restock" 
                                                data-id="@item.MaLinhKien" 
                                                title="Nhập số lượng tùy chọn">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <a asp-action="Edit" asp-route-id="@item.MaLinhKien" 
                                           class="btn btn-outline-warning" title="Sửa thông tin">
                                            <i class="fas fa-cog"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            
            <!-- Bulk Actions -->
            <div class="card-footer">
                <div class="row align-items-center">
                    <div class="col-md-6">
                        <small class="text-muted">
                            <span id="selectedCount">0</span> mặt hàng được chọn
                        </small>
                    </div>
                    <div class="col-md-6 text-end">
                        <div class="btn-group btn-group-sm">
                            <button type="button" class="btn btn-success" id="bulkRestockBtn" disabled>
                                <i class="fas fa-plus me-1"></i> Nhập Hàng Đã Chọn
                            </button>
                            <button type="button" class="btn btn-info" id="bulkEditBtn" disabled>
                                <i class="fas fa-edit me-1"></i> Sửa Hàng Loạt
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-check-circle fa-3x text-success mb-3"></i>
                <h5 class="text-success">Tuyệt Vời! Không Có Linh Kiện Nào Thiếu Hàng</h5>
                <p class="text-muted">Tất cả linh kiện đều có tồn kho > @ViewData["Threshold"] cái</p>
                <a asp-action="Index" class="btn btn-primary">
                    <i class="fas fa-eye me-1"></i> Xem Tất Cả Linh Kiện
                </a>
            </div>
        }
    </div>
</div>


@if (Model.Any())
{
    <div class="card mt-4">
        <div class="card-header">
            <h6 class="mb-0">
                <i class="fas fa-lightbulb me-2"></i>
                Đề Xuất Nhập Hàng
            </h6>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <h6 class="text-primary">Ưu Tiên Cao (Hết hàng):</h6>
                    @{
                        var outOfStock = Model.Where(l => l.SoLuongTon == 0).ToList();
                    }
                    @if (outOfStock.Any())
                    {
                        <ul class="list-unstyled">
                            @foreach (var item in outOfStock.Take(5))
                            {
                                <li class="mb-2">
                                    <i class="fas fa-exclamation-circle text-danger me-2"></i>
                                    <strong>@item.TenLinhKien</strong>
                                    <small class="text-muted">(@item.LoaiLinhKien?.TenLoaiLinhKien)</small>
                                </li>
                            }
                            @if (outOfStock.Count > 5)
                            {
                                <li><small class="text-muted">và @(outOfStock.Count - 5) mặt hàng khác...</small></li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p class="text-muted"><em>Không có mặt hàng nào hết hàng</em></p>
                    }
                </div>
                <div class="col-md-6">
                    <h6 class="text-warning">Ưu Tiên Trung Bình (Sắp hết):</h6>
                    @{
                        var lowStock = Model.Where(l => l.SoLuongTon > 0 && l.SoLuongTon <= 5).ToList();
                    }
                    @if (lowStock.Any())
                    {
                        <ul class="list-unstyled">
                            @foreach (var item in lowStock.Take(5))
                            {
                                <li class="mb-2">
                                    <i class="fas fa-exclamation-triangle text-warning me-2"></i>
                                    <strong>@item.TenLinhKien</strong>
                                    <small class="text-muted">(còn @item.SoLuongTon)</small>
                                </li>
                            }
                            @if (lowStock.Count > 5)
                            {
                                <li><small class="text-muted">và @(lowStock.Count - 5) mặt hàng khác...</small></li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p class="text-muted"><em>Không có mặt hàng nào sắp hết</em></p>
                    }
                </div>
            </div>
            
            @if (Model.Any())
            {
                <hr>
                <div class="row">
                    <div class="col-md-6">
                        <h6 class="text-info">Tổng Chi Phí Nhập Đề Xuất:</h6>
                        @{
                            var totalSuggestedCost = Model.Sum(l => {
                                var suggested = l.SoLuongTon == 0 ? 20 : (20 - l.SoLuongTon);
                                return suggested * l.GiaNhap;
                            });
                        }
                        <h4 class="text-primary">@totalSuggestedCost.ToString("N0") VNĐ</h4>
                    </div>
                    <div class="col-md-6">
                        <h6 class="text-info">Tổng Số Cái Đề Xuất:</h6>
                        @{
                            var totalSuggestedQuantity = Model.Sum(l => l.SoLuongTon == 0 ? 20 : (20 - l.SoLuongTon));
                        }
                        <h4 class="text-primary">@totalSuggestedQuantity cái</h4>
                    </div>
                </div>
            }
        </div>
    </div>
}


@section Scripts {
    <script src="~/js/linhkien.js"></script>
    <script>
        $(document).ready(function() {
            // Select All functionality
            $('#selectAll').on('change', function() {
                $('.item-checkbox').prop('checked', $(this).is(':checked'));
                updateBulkButtons();
            });
            
            $('.item-checkbox').on('change', function() {
                const totalCheckboxes = $('.item-checkbox').length;
                const checkedCheckboxes = $('.item-checkbox:checked').length;
                
                $('#selectAll').prop('indeterminate', checkedCheckboxes > 0 && checkedCheckboxes < totalCheckboxes);
                $('#selectAll').prop('checked', checkedCheckboxes === totalCheckboxes);
                
                updateBulkButtons();
            });
            
            function updateBulkButtons() {
                const checkedCount = $('.item-checkbox:checked').length;
                $('#selectedCount').text(checkedCount);
                $('#bulkRestockBtn, #bulkEditBtn').prop('disabled', checkedCount === 0);
            }
            
            // Quick Restock
            $('.quick-restock').on('click', function() {
                const btn = $(this);
                const id = btn.data('id');
                const suggested = btn.data('suggested');
                
                if (confirm(`Nhập thêm ${suggested} cái cho linh kiện này?`)) {
                    btn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i>');
                    
                    $.post('@Url.Action("UpdateStock")', {
                        id: id,
                        quantity: suggested,
                        action: 'add'
                    })
                    .done(function(response) {
                        if (response.success) {
                            showToast(`Đã nhập thêm ${suggested} cái thành công!`, 'success');
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            showToast('Có lỗi xảy ra: ' + response.message, 'error');
                            btn.prop('disabled', false).html('<i class="fas fa-plus"></i>');
                        }
                    })
                    .fail(function() {
                        showToast('Không thể kết nối đến server!', 'error');
                        btn.prop('disabled', false).html('<i class="fas fa-plus"></i>');
                    });
                }
            });
            
            // Custom Restock
            $('.custom-restock').on('click', function() {
                const id = $(this).data('id');
                const quantity = prompt('Nhập số lượng muốn nhập thêm:', '10');
                
                if (quantity && !isNaN(quantity) && parseInt(quantity) > 0) {
                    $.post('@Url.Action("UpdateStock")', {
                        id: id,
                        quantity: parseInt(quantity),
                        action: 'add'
                    })
                    .done(function(response) {
                        if (response.success) {
                            showToast(`Đã nhập thêm ${quantity} cái thành công!`, 'success');
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            showToast('Có lỗi xảy ra: ' + response.message, 'error');
                        }
                    })
                    .fail(function() {
                        showToast('Không thể kết nối đến server!', 'error');
                    });
                }
            });
            
            // Bulk Restock
            $('#bulkRestockBtn').on('click', function() {
                const selectedItems = [];
                $('.item-checkbox:checked').each(function() {
                    selectedItems.push({
                        id: $(this).data('id'),
                        name: $(this).data('name')
                    });
                });
                
                if (selectedItems.length === 0) return;
                
                const quantity = prompt(`Nhập số lượng cho ${selectedItems.length} mặt hàng đã chọn:`, '10');
                if (!quantity || isNaN(quantity) || parseInt(quantity) <= 0) return;
                
                if (confirm(`Nhập thêm ${quantity} cái cho ${selectedItems.length} mặt hàng đã chọn?`)) {
                    $('#bulkRestockBtn').prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-1"></i>Đang xử lý...');
                    
                    let completed = 0;
                    let errors = 0;
                    
                    selectedItems.forEach(item => {
                        $.post('@Url.Action("UpdateStock")', {
                            id: item.id,
                            quantity: parseInt(quantity),
                            action: 'add'
                        })
                        .done(function(response) {
                            completed++;
                            if (!response.success) errors++;
                            
                            if (completed === selectedItems.length) {
                                if (errors === 0) {
                                    showToast(`Đã nhập thành công ${selectedItems.length} mặt hàng!`, 'success');
                                } else {
                                    showToast(`Hoàn thành với ${errors} lỗi trong ${selectedItems.length} mặt hàng.`, 'warning');
                                }
                                setTimeout(() => location.reload(), 2000);
                            }
                        })
                        .fail(function() {
                            completed++;
                            errors++;
                            
                            if (completed === selectedItems.length) {
                                showToast(`Hoàn thành với ${errors} lỗi trong ${selectedItems.length} mặt hàng.`, 'error');
                                $('#bulkRestockBtn').prop('disabled', false).html('<i class="fas fa-plus me-1"></i>Nhập Hàng Đã Chọn');
                            }
                        });
                    });
                }
            });
        });
        
        // Bulk Update Stock function
        function bulkUpdateStock() {
            alert('Chức năng nhập hàng loạt sẽ được phát triển trong phiên bản tiếp theo.');
        }
        
        // Export List function
        function exportList() {
            const data = [];
            $('.table tbody tr').each(function() {
                const row = $(this);
                data.push([
                    row.find('td:nth-child(2) strong').text(),
                    row.find('td:nth-child(3) .badge').text(),
                    row.find('td:nth-child(4) .badge').text() || 'Chưa có',
                    row.find('td:nth-child(5) .badge').text(),
                    row.find('td:nth-child(6) strong').text(),
                    row.find('td:nth-child(7) strong').text()
                ]);
            });
            
            let csvContent = "data:text/csv;charset=utf-8,";
            csvContent += "Tên Linh Kiện,Loại,Hãng,Tồn Kho,Giá Nhập,Đề Xuất Nhập\n";
            data.forEach(row => {
                csvContent += row.join(",") + "\n";
            });
            
            const encodedUri = encodeURI(csvContent);
            const link = document.createElement("a");
            link.setAttribute("href", encodedUri);
            link.setAttribute("download", `canh-bao-ton-kho-${new Date().toISOString().split('T')[0]}.csv`);
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
    </script>
}