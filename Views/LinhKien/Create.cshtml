@model phonev2.Models.LinhKien
@{
    Layout = "_AdminLayout";
}


@section PageActions {
    <a asp-action="Index" class="btn btn-secondary">
        <i class="fas fa-arrow-left me-1"></i> Quay Lại Danh Sách
    </a>
}

<div class="row justify-content-center">
    <div class="col-lg-10">
        <div class="card shadow">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">
                    <i class="fas fa-plus-circle me-2"></i>
                    Thêm Linh Kiện Mới
                </h5>
            </div>
            <div class="card-body">
                <form asp-action="Create" method="post" novalidate id="createForm">
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                    
                    <!-- Row 1: Tên linh kiện và Loại -->
                    <div class="row mb-3">
                        <div class="col-md-8">
                            <label asp-for="TenLinhKien" class="form-label fw-bold">
                                <i class="fas fa-microchip me-1 text-primary"></i>
                                @Html.DisplayNameFor(model => model.TenLinhKien)
                                <span class="text-danger">*</span>
                            </label>
                            <input asp-for="TenLinhKien" class="form-control form-control-lg" 
                                   placeholder="VD: RAM DDR4 8GB Kingston, CPU Intel Core i5-11400..." 
                                   autocomplete="off" />
                            <span asp-validation-for="TenLinhKien" class="text-danger"></span>
                        </div>
                        
                        <div class="col-md-4">
                            <label asp-for="MaLoaiLinhKien" class="form-label fw-bold">
                                <i class="fas fa-tags me-1 text-info"></i>
                                @Html.DisplayNameFor(model => model.MaLoaiLinhKien)
                                <span class="text-danger">*</span>
                            </label>
                            <select asp-for="MaLoaiLinhKien" class="form-select form-select-lg" asp-items="ViewBag.LoaiLinhKienList">
                                <option value="">-- Chọn loại linh kiện --</option>
                            </select>
                            <span asp-validation-for="MaLoaiLinhKien" class="text-danger"></span>
                        </div>
                    </div>

                    <!-- Row 2: Hãng sản xuất và Thông số kỹ thuật -->
                    <div class="row mb-3">
                        <div class="col-md-4">
                            <label asp-for="HangSanXuat" class="form-label fw-bold">
                                <i class="fas fa-industry me-1 text-secondary"></i>
                                @Html.DisplayNameFor(model => model.HangSanXuat)
                            </label>
                            <input asp-for="HangSanXuat" class="form-control" 
                                   placeholder="VD: Kingston, Samsung, Intel, AMD..." 
                                   list="brandSuggestions" autocomplete="off" />
                            <datalist id="brandSuggestions">
                                <option value="Kingston"></option>
                                <option value="Samsung"></option>
                                <option value="Intel"></option>
                                <option value="AMD"></option>
                                <option value="ASUS"></option>
                                <option value="MSI"></option>
                                <option value="Gigabyte"></option>
                                <option value="Corsair"></option>
                                <option value="G.Skill"></option>
                                <option value="Western Digital"></option>
                                <option value="Seagate"></option>
                                <option value="NVIDIA"></option>
                            </datalist>
                            <span asp-validation-for="HangSanXuat" class="text-danger"></span>
                        </div>
                        
                        <div class="col-md-8">
                            <label asp-for="ThongSoKyThuat" class="form-label fw-bold">
                                <i class="fas fa-cogs me-1 text-info"></i>
                                @Html.DisplayNameFor(model => model.ThongSoKyThuat)
                            </label>
                            <textarea asp-for="ThongSoKyThuat" class="form-control" rows="3" 
                                      placeholder="VD: DDR4-3200, CL16, 1.35V, Non-ECC, Unbuffered..."></textarea>
                            <span asp-validation-for="ThongSoKyThuat" class="text-danger"></span>
                            <div class="form-text">
                                <i class="fas fa-info-circle me-1"></i>
                                Thông số kỹ thuật chi tiết giúp khách hàng hiểu rõ hơn về sản phẩm
                            </div>
                        </div>
                    </div>

                    <!-- Row 3: Giá nhập, Giá bán và Số lượng -->
                    <div class="row mb-3">
                        <div class="col-md-4">
                            <label asp-for="GiaNhap" class="form-label fw-bold">
                                <i class="fas fa-file-import me-1 text-warning"></i>
                                @Html.DisplayNameFor(model => model.GiaNhap)
                                <span class="text-danger">*</span>
                            </label>
                            <div class="input-group">
                                <input asp-for="GiaNhap" class="form-control" 
                                       placeholder="0" 
                                       type="number" 
                                       step="1000"
                                       min="0"
                                       title="Vui lòng nhập giá trên 1000đ" />
                                <span class="input-group-text">VNĐ</span>
                            </div>
                            <span asp-validation-for="GiaNhap" class="text-danger"></span>
                            <div class="mt-1">
                                <small class="text-warning fw-bold" id="formattedGiaNhap">0 VNĐ</small>
                            </div>
                        </div>
                        
                        <div class="col-md-4">
                            <label asp-for="GiaBan" class="form-label fw-bold">
                                <i class="fas fa-tag me-1 text-success"></i>
                                @Html.DisplayNameFor(model => model.GiaBan)
                                <span class="text-danger">*</span>
                            </label>
                            <div class="input-group">
                                <input asp-for="GiaBan" class="form-control" 
                                       placeholder="0" 
                                       type="number" 
                                       step="1000"
                                       min="0"
                                       title="Vui lòng nhập giá trên 1000đ" />
                                <span class="input-group-text">VNĐ</span>
                            </div>
                            <span asp-validation-for="GiaBan" class="text-danger"></span>
                            <div class="mt-1">
                                <small class="text-success fw-bold" id="formattedGiaBan">0 VNĐ</small>
                            </div>
                        </div>
                        
                        <div class="col-md-4">
                            <label asp-for="SoLuongTon" class="form-label fw-bold">
                                <i class="fas fa-boxes me-1 text-primary"></i>
                                @Html.DisplayNameFor(model => model.SoLuongTon)
                                <span class="text-danger">*</span>
                            </label>
                            <div class="input-group">
                                <input asp-for="SoLuongTon" class="form-control" 
                                       placeholder="0" 
                                       type="number" 
                                       min="0" />
                                <span class="input-group-text">cái</span>
                            </div>
                            <span asp-validation-for="SoLuongTon" class="text-danger"></span>
                            <div class="form-text">
                                <i class="fas fa-info-circle me-1"></i>
                                Số lượng hiện có trong kho
                            </div>
                        </div>
                    </div>

                    <!-- Row 4: Lợi nhuận tính toán -->
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label fw-bold">
                                <i class="fas fa-calculator me-1 text-info"></i>
                                Phân Tích Lợi Nhuận
                            </label>
                            <div class="card bg-light">
                                <div class="card-body">
                                    <div class="row text-center">
                                        <div class="col-4">
                                            <div class="border-end">
                                                <h5 class="text-success mb-1" id="profitAmount">0 VNĐ</h5>
                                                <small class="text-muted">Lợi nhuận/cái</small>
                                            </div>
                                        </div>
                                        <div class="col-4">
                                            <div class="border-end">
                                                <h5 class="text-primary mb-1" id="profitPercent">0%</h5>
                                                <small class="text-muted">Tỷ lệ lợi nhuận</small>
                                            </div>
                                        </div>
                                        <div class="col-4">
                                            <h5 class="text-warning mb-1" id="totalProfit">0 VNĐ</h5>
                                            <small class="text-muted">Lợi nhuận tổng</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <label class="form-label fw-bold">
                                <i class="fas fa-lightbulb me-1 text-warning"></i>
                                Gợi Ý Giá Bán
                            </label>
                            <div class="bg-light p-3 rounded">
                                <div class="d-flex justify-content-between mb-2">
                                    <span>Lợi nhuận 20%:</span>
                                    <strong class="text-success" id="suggest20">0 VNĐ</strong>
                                </div>
                                <div class="d-flex justify-content-between mb-2">
                                    <span>Lợi nhuận 30%:</span>
                                    <strong class="text-warning" id="suggest30">0 VNĐ</strong>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <span>Lợi nhuận 50%:</span>
                                    <strong class="text-danger" id="suggest50">0 VNĐ</strong>
                                </div>
                                <hr class="my-2">
                                <div class="d-grid gap-2">
                                    <div class="btn-group btn-group-sm">
                                        <button type="button" class="btn btn-outline-success apply-suggestion" data-percent="20">Áp dụng 20%</button>
                                        <button type="button" class="btn btn-outline-warning apply-suggestion" data-percent="30">Áp dụng 30%</button>
                                        <button type="button" class="btn btn-outline-danger apply-suggestion" data-percent="50">Áp dụng 50%</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Row 5: Trạng thái -->
                    <div class="row mb-4">
                        <div class="col-md-12">
                            <label class="form-label fw-bold">
                                <i class="fas fa-toggle-on me-1 text-primary"></i>
                                Trạng Thái
                            </label>
                            <div class="form-check form-switch">
                                <input asp-for="TrangThai" class="form-check-input" type="checkbox" 
                                       id="trangThaiSwitch" checked />
                                <label class="form-check-label" for="trangThaiSwitch">
                                    <span class="switch-label">Linh kiện đang được bán</span>
                                </label>
                            </div>
                            <div class="form-text">
                                <i class="fas fa-info-circle me-1"></i>
                                Chỉ những linh kiện đang hoạt động mới hiển thị trong danh sách bán hàng
                            </div>
                        </div>
                    </div>

                    <!-- Preview Card -->
                    <div class="row mb-4">
                        <div class="col-md-12">
                            <label class="form-label fw-bold">
                                <i class="fas fa-eye me-1 text-secondary"></i>
                                Xem Trước Linh Kiện
                            </label>
                            <div class="card border-2 border-dashed" id="previewCard">
                                <div class="card-body">
                                    <div class="row align-items-center">
                                        <div class="col-md-6">
                                            <h6 class="card-title mb-1" id="previewName">
                                                <i class="fas fa-microchip me-2"></i>
                                                <span class="text-muted">Tên linh kiện sẽ hiển thị ở đây</span>
                                            </h6>
                                            <p class="card-text text-muted mb-1" id="previewBrand">
                                                <i class="fas fa-industry me-1"></i>
                                                <span>Hãng sản xuất</span>
                                            </p>
                                            <p class="card-text text-muted mb-0" id="previewCategory">
                                                <i class="fas fa-tags me-1"></i>
                                                <span>Loại linh kiện</span>
                                            </p>
                                        </div>
                                        <div class="col-md-3 text-center">
                                            <div class="price-display">
                                                <h4 class="text-success mb-0" id="previewPrice">0 VNĐ</h4>
                                                <small class="text-muted" id="previewCost">Giá nhập: 0 VNĐ</small>
                                            </div>
                                        </div>
                                        <div class="col-md-3 text-center">
                                            <div class="stock-display">
                                                <span class="badge bg-info fs-6 px-3 py-2" id="previewStock">
                                                    <i class="fas fa-boxes me-1"></i>
                                                    <span>0 cái</span>
                                                </span>
                                                <br>
                                                <small class="text-muted" id="previewStockStatus">Tình trạng kho</small>
                                            </div>
                                        </div>
                                    </div>
                                    <hr>
                                    <div class="row" id="previewSpecs" style="display: none;">
                                        <div class="col-12">
                                            <strong class="text-muted">Thông số kỹ thuật:</strong>
                                            <p class="mb-0" id="previewSpecsText"></p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                        <a asp-action="Index" class="btn btn-secondary btn-lg me-md-2">
                            <i class="fas fa-times me-1"></i>
                            Hủy Bỏ
                        </a>
                        <button type="submit" class="btn btn-primary btn-lg">
                            <i class="fas fa-save me-1"></i>
                            Lưu Linh Kiện
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


@section Styles {
    <style>
        .vietnamese-error {
            display: block !important;
            margin-top: 0.25rem !important;
            font-size: 0.875rem !important;
            color: #dc3545 !important;
            font-weight: 500 !important;
            position: relative !important;
            z-index: 1 !important;
        }
        
        /* Đảm bảo thông báo lỗi hiển thị bên dưới input field */
        .form-control + .vietnamese-error,
        .form-select + .vietnamese-error,
        .input-group + .vietnamese-error {
            margin-top: 0.25rem !important;
            margin-bottom: 0.5rem !important;
        }
        
        /* Đảm bảo input group giữ nguyên layout */
        .input-group {
            display: flex !important;
            flex-wrap: nowrap !important;
        }
        
        /* Ẩn thông báo lỗi mặc định của ASP.NET Core */
        .field-validation-error,
        .field-validation-valid {
            display: none !important;
        }
        
        /* Đảm bảo input group không bị ảnh hưởng */
        .input-group {
            position: relative !important;
        }
        
        .input-group + .vietnamese-error {
            margin-top: 0.5rem !important;
        }
        
        /* Xử lý trường hợp input group có nhiều thành phần */
        .input-group .form-control + .vietnamese-error {
            margin-top: 0.5rem !important;
        }
        
        /* Đảm bảo thông báo lỗi không bị che khuất */
        .vietnamese-error {
            clear: both !important;
            width: 100% !important;
        }
    </style>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/linhkien.js"></script>
    <script>
    $(document).ready(function() {
        // Hàm format số tiền
        function formatCurrency(amount) {
            if (amount === '' || amount === null || amount === undefined || isNaN(amount)) {
                return '0 VNĐ';
            }
            return new Intl.NumberFormat('vi-VN', {
                style: 'currency',
                currency: 'VND'
            }).format(amount);
        }
        
        // Kiểm tra xem giá trị có hợp lệ không (số và ≥0)
        function isValidNumber(value) {
            return !isNaN(parseFloat(value)) && parseFloat(value) >= 0;
        }
        
        // Kiểm tra giá tiền hợp lệ (≥1000 và là bội số của 1000)
        function isValidPrice(value) {
            const numValue = parseFloat(value);
            return numValue >= 1000 && numValue % 1000 === 0;
        }
        
        // Cập nhật hiển thị giá nhập
        function updateGiaNhapDisplay() {
            const value = $('#GiaNhap').val();
            $('#formattedGiaNhap').text(formatCurrency(value));
        }
        
        // Cập nhật hiển thị giá bán
        function updateGiaBanDisplay() {
            const value = $('#GiaBan').val();
            $('#formattedGiaBan').text(formatCurrency(value));
        }
        
        // Cập nhật phân tích lợi nhuận (chỉ khi giá trị hợp lệ)
        function updateProfitAnalysis() {
            const giaNhapVal = $('#GiaNhap').val();
            const giaBanVal = $('#GiaBan').val();
            const soLuongVal = $('#SoLuongTon').val();
            
            // Chỉ cập nhật nếu giá trị hợp lệ
            if (isValidPrice(giaNhapVal) && isValidPrice(giaBanVal) && isValidNumber(soLuongVal)) {
                const giaNhap = parseFloat(giaNhapVal);
                const giaBan = parseFloat(giaBanVal);
                const soLuong = parseInt(soLuongVal);
                
                if (giaBan > giaNhap) {
                    const profitPerUnit = giaBan - giaNhap;
                    const profitPercent = ((profitPerUnit / giaNhap) * 100);
                    const totalProfit = profitPerUnit * soLuong;
                    
                    $('#profitAmount').text(formatCurrency(profitPerUnit));
                    $('#profitPercent').text(profitPercent.toFixed(1) + '%');
                    $('#totalProfit').text(formatCurrency(totalProfit));
                    return;
                }
            }
            
            // Reset nếu không hợp lệ
            $('#profitAmount').text('0 VNĐ');
            $('#profitPercent').text('0%');
            $('#totalProfit').text('0 VNĐ');
        }
        
        // Cập nhật gợi ý giá bán (chỉ khi giá nhập hợp lệ)
        function updatePriceSuggestions() {
            const giaNhapVal = $('#GiaNhap').val();
            
            if (isValidPrice(giaNhapVal)) {
                const giaNhap = parseFloat(giaNhapVal);
                const suggest20 = Math.round(giaNhap * 1.2 / 1000) * 1000;
                const suggest30 = Math.round(giaNhap * 1.3 / 1000) * 1000;
                const suggest50 = Math.round(giaNhap * 1.5 / 1000) * 1000;
                
                $('#suggest20').text(formatCurrency(suggest20));
                $('#suggest30').text(formatCurrency(suggest30));
                $('#suggest50').text(formatCurrency(suggest50));
            } else {
                $('#suggest20').text('0 VNĐ');
                $('#suggest30').text('0 VNĐ');
                $('#suggest50').text('0 VNĐ');
            }
        }
        
        // Cập nhật hiển thị giá real-time
        $('#GiaNhap').on('input', function() {
            updateGiaNhapDisplay();
            validateNumberField(this);
            updatePriceSuggestions();
            updateProfitAnalysis();
        });
        
        $('#GiaBan').on('input', function() {
            updateGiaBanDisplay();
            validateNumberField(this);
            updateProfitAnalysis();
        });
        
        $('#SoLuongTon').on('input', function() {
            validateNumberField(this);
            updateProfitAnalysis();
        });
        
        // Kiểm tra số hợp lệ và hiển thị lỗi
        function validateNumberField(input) {
            const $input = $(input);
            const value = $input.val().trim();
            const fieldName = $input.attr('id');
            const isPriceField = (fieldName === 'GiaNhap' || fieldName === 'GiaBan');
            
            // Xóa lỗi cũ
            $input.siblings('.vietnamese-error').remove();
            $input.siblings(`span[data-valmsg-for="${fieldName}"]`).hide();
            $input.siblings('.field-validation-error').hide();
            $input.siblings('.field-validation-valid').hide();
            
            // Xóa lỗi trong column chứa input
            $input.closest('.col-md-4, .col-md-6, .col-md-8').find('.vietnamese-error').remove();
            
            // Kiểm tra trường bắt buộc
            if ($input.prop('required') && (value === '' || value === null)) {
                showFieldError($input, 'Vui lòng nhập giá trị lớn hơn 0');
                return false;
            }
            
            // Kiểm tra nếu không có giá trị
            if (value === '' || value === null) {
                return true; // Không hiển thị lỗi nếu không bắt buộc
            }
            
            // Kiểm tra giá trị số
            const numValue = parseFloat(value);
            if (isNaN(numValue)) {
                showFieldError($input, 'Vui lòng nhập giá trị lớn hơn 0');
                return false;
            }
            
            // Kiểm tra giá trị âm
            if (numValue < 0) {
                showFieldError($input, 'Vui lòng nhập giá trị lớn hơn 0');
                return false;
            }
            
            // Kiểm tra giá tiền
            if (isPriceField) {
                // Kiểm tra tối thiểu 1000đ
                if (numValue > 0 && numValue < 1000) {
                    showFieldError($input, 'Vui lòng nhập giá lớn hơn 0');
                    return false;
                }
                
                // Kiểm tra bội số của 1000
                if (numValue % 1000 !== 0) {
                    showFieldError($input, 'Vui lòng nhập giá lớn hơn 0');
                    return false;
                }
            }
            
            return true;
        }
        
        // Hiển thị lỗi cho trường
        function showFieldError($input, message) {
            // Xóa lỗi cũ trước khi thêm lỗi mới
            $input.siblings('.vietnamese-error').remove();
            $input.closest('.col-md-4').find('.vietnamese-error').remove();
            
            // Nếu input nằm trong input-group, chèn lỗi sau input-group
            const $inputGroup = $input.closest('.input-group');
            if ($inputGroup.length > 0) {
                $inputGroup.after(`<div class="text-danger vietnamese-error">${message}</div>`);
            } else {
                // Chèn thông báo lỗi sau input field
                $input.after(`<div class="text-danger vietnamese-error">${message}</div>`);
            }
        }
        
        // Xóa tất cả lỗi
        function clearAllErrors() {
            $('.vietnamese-error').remove();
            $('span[data-valmsg-for]').hide();
            $('.field-validation-error').hide();
            $('.field-validation-valid').hide();
            
            // Xóa lỗi trong tất cả các column
            $('.col-md-4').find('.vietnamese-error').remove();
            $('.col-md-6').find('.vietnamese-error').remove();
            $('.col-md-8').find('.vietnamese-error').remove();
        }
        
        // Kiểm tra form trước khi submit
        $('#createForm').on('submit', function(e) {
            let isValid = true;
            clearAllErrors();
            
            // Kiểm tra trường bắt buộc
            const requiredFields = [
                '#TenLinhKien',
                '#MaLoaiLinhKien',
                '#GiaNhap',
                '#GiaBan',
                '#SoLuongTon'
            ];
            
            requiredFields.forEach(selector => {
                const $field = $(selector);
                const value = $field.val().trim();
                
                if (value === '' || value === null) {
                    isValid = false;
                    let fieldName = '';
                    
                    switch (selector) {
                        case '#TenLinhKien': fieldName = 'Tên linh kiện'; break;
                        case '#MaLoaiLinhKien': fieldName = 'Loại linh kiện'; break;
                        case '#GiaNhap': fieldName = 'Giá nhập'; break;
                        case '#GiaBan': fieldName = 'Giá bán'; break;
                        case '#SoLuongTon': fieldName = 'Số lượng tồn'; break;
                    }
                    
                    showFieldError($field, 'Vui lòng nhập giá trị lớn hơn 0');
                }
            });
            
            // Kiểm tra các trường số
            const numberFields = ['#GiaNhap', '#GiaBan', '#SoLuongTon'];
            numberFields.forEach(selector => {
                if (!validateNumberField($(selector)[0])) {
                    isValid = false;
                }
            });
            
            // Kiểm tra giá bán > giá nhập (chỉ khi cả hai đều hợp lệ)
            if (isValid) {
                const giaNhapVal = $('#GiaNhap').val();
                const giaBanVal = $('#GiaBan').val();
                
                if (isValidPrice(giaNhapVal) && isValidPrice(giaBanVal)) {
                    const giaNhap = parseFloat(giaNhapVal);
                    const giaBan = parseFloat(giaBanVal);
                    
                    if (giaBan <= giaNhap) {
                        isValid = false;
                        showFieldError($('#GiaBan'), 'Vui lòng nhập giá trị lớn hơn 0');
                    }
                }
            }
            
            if (!isValid) {
                e.preventDefault();
                
                // Cuộn đến lỗi đầu tiên
                $('html, body').animate({
                    scrollTop: $('.vietnamese-error').first().offset().top - 100
                }, 500);
            }
        });
        
        // Tự động định dạng giá khi rời khỏi trường
        $('#GiaNhap, #GiaBan').on('blur', function() {
            const value = $(this).val();
            if (value && !isNaN(value)) {
                const numValue = parseInt(value);
                if (!isNaN(numValue)) {
                    // Làm tròn về bội số gần nhất của 1000
                    const roundedValue = Math.round(numValue / 1000) * 1000;
                    $(this).val(roundedValue);
                    
                    if ($(this).attr('id') === 'GiaNhap') {
                        updateGiaNhapDisplay();
                        updatePriceSuggestions();
                        updateProfitAnalysis();
                    } else {
                        updateGiaBanDisplay();
                        updateProfitAnalysis();
                    }
                }
            }
        });
        
        // Áp dụng gợi ý giá
        $('.apply-suggestion').on('click', function() {
            const percent = parseInt($(this).data('percent'));
            const giaNhapVal = $('#GiaNhap').val();
            
            if (isValidPrice(giaNhapVal)) {
                const giaNhap = parseFloat(giaNhapVal);
                const giaBanSuggestion = Math.round(giaNhap * (1 + percent/100));
                // Làm tròn về bội số của 1000
                const roundedGiaBan = Math.round(giaBanSuggestion / 1000) * 1000;
                $('#GiaBan').val(roundedGiaBan);
                updateGiaBanDisplay();
                updateProfitAnalysis();
            }
        });
        
        // Khởi tạo giá trị
        updateGiaNhapDisplay();
        updateGiaBanDisplay();
        updatePriceSuggestions();
        updateProfitAnalysis();
    });
</script>
}